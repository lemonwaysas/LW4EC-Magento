<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    Mage
 * @package     Mage_Adminhtml
 * @copyright  Copyright (c) 2006-2017 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */


/**
 * Encrypted config field backend model
 *
 * @category   Mage
 * @package    Mage_Adminhtml
 */
class Lemonway_Lemonway_Model_Adminhtml_Backend_Wallet extends Mage_Core_Model_Config_Data
{

    /**
     * Decrypt value after loading
     *
     */
    protected function _afterLoad()
    {
        try {

            $session = Mage::getSingleton('adminhtml/session');

            $apiLogin = Mage::getStoreConfig('Lemonway_lemonway/lemonway_api/api_login');
            Mage::log('ApiLogin :' . $apiLogin, null, 'AdminLog.log');
            $wallet = Mage::getSingleton('Lemonway_lemonway/apikit_kit')->GetWalletDetails(array("email" => $apiLogin));
            Mage::log(print_r('Wallet merchant id : ' . $wallet->WALLET->ID, true), null, 'AdminLog.log');
            $this->_data['wallet_merchant_id'] = $wallet->WALLET->ID;
            Mage::getConfig()->saveConfig('Lemonway_lemonway/lemonway_api/wallet_merchant_id', $this->_data['wallet_merchant_id'], 'default', 0);
            //return $this->_data['wallet_merchant_id'];

        } catch (Exception $e) {

            $session->addException($e, Mage::helper('adminhtml')->__(' ') . $e->getMessage());
            header("Refresh:50");

        }
        return parent::_afterLoad();
    }

//    protected function _beforeLoad($id, $field = null)
//    {
////        try {
////            $session = Mage::getSingleton('adminhtml/session');
////
////            $apiLogin = Mage::getStoreConfig('sirateck_lemonway/lemonway_api/api_login');
////            Mage::log($apiLogin, null, 'AdminLog.log');
////            $wallet = Mage::getSingleton('sirateck_lemonway/apikit_kit')->GetWalletDetails(array("email" => $apiLogin));
////            Mage::log(print_r($wallet->WALLET->ID, true), null, 'AdminLog.log');
////            $this->_data['wallet_merchant_id'] = $wallet->WALLET->ID;
////            Mage::getConfig()->saveConfig('sirateck_lemonway/lemonway_api/wallet_merchant_id', $this->_data['wallet_merchant_id'], 'default', 0);
////
////            return $this->_data['wallet_merchant_id'];
////        } catch (Exception $e) {
////            $session->addException($e, Mage::helper('adminhtml')->__(' ') . $e->getMessage());
////        }
//
//        //return parent::_beforeLoad($id, $field); // TODO: Change the autogenerated stub
//    }

    /**
     * Processing object after save data
     *
     * @return Mage_Core_Model_Abstract
     */
//    protected function _afterSave()
//    {
////        try {
////            $session = Mage::getSingleton('adminhtml/session');
////
////            $apiLogin = Mage::getStoreConfig('sirateck_lemonway/lemonway_api/api_login');
////
////            Mage::log($apiLogin, null, 'AdminLog.log');
////            $wallet = Mage::getSingleton('sirateck_lemonway/apikit_kit')->GetWalletDetails(array("email" => $apiLogin));
////            Mage::log(print_r($wallet->WALLET->ID, true), null, 'AdminLog.log');
////            $this->_data['wallet_merchant_id'] = $wallet->WALLET->ID;
////            Mage::getConfig()->saveConfig('sirateck_lemonway/lemonway_api/wallet_merchant_id', $this->_data['wallet_merchant_id'], 'default', 0);
////
////            return $this->_data['wallet_merchant_id'];
////        } catch (Exception $e) {
////            $session->addException($e, Mage::helper('adminhtml')->__(' ') . $e->getMessage());
////        }
//        $apiLogin = Mage::getStoreConfig('sirateck_lemonway/lemonway_api/api_login');
//        Mage::log('apiLogin :'.$apiLogin, null, 'AdminLog.log');
//        $login = (string)$this->getValue();
//       $pass= $this->getFieldsetDataValue('api_pass');
//                    Mage::log('login :'.$login, null, 'AdminLog.log');
//            Mage::log('mdp :'.$pass, null, 'AdminLog.log');
//        $wallet = Mage::getSingleton('sirateck_lemonway/apikit_kit')->GetWalletDetails(array("email" => $login));
//        Mage::log(print_r($wallet->WALLET->ID, true), null, 'AdminLog.log');
//
//
//        return parent::_afterSave();
//    }

    /**
     * Encrypt value before saving
     *
     **/
    // protected function _beforeSave()
    //{


//        $value = (string)$this->getValue();
//        //don't change value, if an obscured value came
//        if (preg_match('/^\*+$/', $this->getValue())) {
//            $value = $this->getOldValue();
//        }
//        if (!empty($value) && ($encrypted = Mage::helper('core')->encrypt($value))) {
//            $this->setValue($encrypted);
//        }
    //}


    /**
     * Get & decrypt old value from configuration
     *
     * @return string
     */
    //public function getOldValue()
    //{
//        return Mage::helper('core')->decrypt(parent::getOldValue());
    //}
}
